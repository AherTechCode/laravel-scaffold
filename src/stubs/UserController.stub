<?php

namespace {{namespace}};

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Services\{{modelName}}Service;

class {{modelName}}Controller extends Controller
{
    protected $service;

    public function __construct({{modelName}}Service $service)
    {
        $this->service = $service;
    }

    public function index()
    {
        return response()->json($this->service->getAll());
    }

    public function show($id)
    {
        return response()->json($this->service->getById($id));
    }

    public function store(Request $request)
    {
        $data = $request->all();
        return response()->json($this->service->create($data));
    }

    public function update(Request $request, $id)
    {
        $data = $request->all();
        return response()->json($this->service->update($id, $data));
    }

    public function destroy($id)
    {
        return response()->json($this->service->delete($id));
    }

    public function search(Request $request)
    {
        $request->validate([
            'column' => 'required|string',
            'value' => 'required|string',
        ]);

        return response()->json($this->service->search($request->column, $request->value));
    }

    public function resetPassword(Request $request)
    {
        $request->validate([
            'email' => 'required|email|exists:users,email',
        ]);

        // Logic for resetting the password, like sending an email with a reset link
        return response()->json($this->service->resetPassword($request->email));
    }

    public function changePassword(Request $request)
    {
        $request->validate([
            'current_password' => 'required',
            'new_password' => 'required|min:8|confirmed',
        ]);

        return response()->json($this->service->changePassword(auth()->user(), $request->all()));
    }

    {{massUploadFunction}}
}
